definitions:
  github_com_gabrielmrtt_taski_internal_core.PaginationOutput-github_com_gabrielmrtt_taski_internal_team_TeamDto:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_team.TeamDto'
        type: array
      hasMore:
        type: boolean
      page:
        type: integer
      total:
        type: integer
    type: object
  github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse:
    properties:
      errors: {}
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  github_com_gabrielmrtt_taski_internal_organization.OrganizationDto:
    properties:
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      status:
        type: string
      updatedAt:
        type: string
      userCreatorId:
        type: string
      userEditorId:
        type: string
    type: object
  github_com_gabrielmrtt_taski_internal_organization.OrganizationUserDto:
    properties:
      organizationId:
        type: string
      role:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_role.RoleDto'
      status:
        type: string
      user:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_user.UserDto'
    type: object
  github_com_gabrielmrtt_taski_internal_organization_infra_http_requests.CreateOrganizationRequest:
    properties:
      name:
        type: string
    type: object
  github_com_gabrielmrtt_taski_internal_organization_infra_http_requests.InviteUserToOrganizationRequest:
    properties:
      email:
        type: string
      roleId:
        type: string
      workspaces:
        items:
          $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_organization_infra_http_requests.InviteUserToOrganizationWorkspaceInput'
        type: array
    type: object
  github_com_gabrielmrtt_taski_internal_organization_infra_http_requests.InviteUserToOrganizationWorkspaceInput:
    properties:
      projects:
        items:
          type: string
        type: array
      workspaceId:
        type: string
    type: object
  github_com_gabrielmrtt_taski_internal_organization_infra_http_requests.UpdateOrganizationRequest:
    properties:
      name:
        type: string
    type: object
  github_com_gabrielmrtt_taski_internal_project.ProjectDto:
    properties:
      color:
        type: string
      createdAt:
        type: string
      description:
        type: string
      endAt:
        type: string
      id:
        type: string
      name:
        type: string
      priorityLevel:
        type: integer
      startAt:
        type: string
      status:
        type: string
      updatedAt:
        type: string
      userCreatorId:
        type: string
      userEditorId:
        type: string
      workspaceId:
        type: string
    type: object
  github_com_gabrielmrtt_taski_internal_project_infra_http_requests.CreateProjectRequest:
    properties:
      color:
        type: string
      description:
        type: string
      endAt:
        type: integer
      name:
        type: string
      priorityLevel:
        type: integer
      startAt:
        type: integer
    type: object
  github_com_gabrielmrtt_taski_internal_project_infra_http_requests.UpdateProjectRequest:
    properties:
      color:
        type: string
      description:
        type: string
      endAt:
        type: integer
      name:
        type: string
      priorityLevel:
        type: integer
      startAt:
        type: integer
      status:
        type: string
    type: object
  github_com_gabrielmrtt_taski_internal_role.RoleDto:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      isSystemDefault:
        type: boolean
      name:
        type: string
      organizationId:
        type: string
      permissions:
        items:
          type: string
        type: array
      updatedAt:
        type: string
      userCreatorId:
        type: string
      userEditorId:
        type: string
    type: object
  github_com_gabrielmrtt_taski_internal_role_infra_http_requests.CreateRoleRequest:
    properties:
      description:
        type: string
      name:
        type: string
      permissions:
        items:
          type: string
        type: array
    type: object
  github_com_gabrielmrtt_taski_internal_role_infra_http_requests.UpdateRoleRequest:
    properties:
      description:
        type: string
      name:
        type: string
      permissions:
        items:
          type: string
        type: array
    type: object
  github_com_gabrielmrtt_taski_internal_team.TeamDto:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      members:
        items:
          $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_team.TeamUserDto'
        type: array
      name:
        type: string
      status:
        type: string
      updatedAt:
        type: string
      userCreatorId:
        type: string
      userEditorId:
        type: string
    type: object
  github_com_gabrielmrtt_taski_internal_team.TeamUserDto:
    properties:
      user:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_user.UserDto'
    type: object
  github_com_gabrielmrtt_taski_internal_team_infra_http_requests.CreateTeamRequest:
    properties:
      description:
        type: string
      members:
        items:
          type: string
        type: array
      name:
        type: string
    type: object
  github_com_gabrielmrtt_taski_internal_team_infra_http_requests.UpdateTeamRequest:
    properties:
      description:
        type: string
      members:
        items:
          type: string
        type: array
      name:
        type: string
    type: object
  github_com_gabrielmrtt_taski_internal_user.UserCredentialsDto:
    properties:
      email:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
    type: object
  github_com_gabrielmrtt_taski_internal_user.UserDataDto:
    properties:
      about:
        type: string
      displayName:
        type: string
      profilePictureFileId:
        type: string
    type: object
  github_com_gabrielmrtt_taski_internal_user.UserDto:
    properties:
      createdAt:
        type: string
      credentials:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_user.UserCredentialsDto'
      data:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_user.UserDataDto'
      id:
        type: string
      status:
        type: string
      updatedAt:
        type: string
    type: object
  github_com_gabrielmrtt_taski_internal_user.UserLoginDto:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_user.UserDto'
    type: object
  github_com_gabrielmrtt_taski_internal_user_infra_http_requests.ChangeUserPasswordRequest:
    properties:
      password:
        type: string
      passwordConfirmation:
        type: string
    type: object
  github_com_gabrielmrtt_taski_internal_user_infra_http_requests.ForgotUserPasswordRequest:
    properties:
      email:
        type: string
    type: object
  github_com_gabrielmrtt_taski_internal_user_infra_http_requests.RecoverUserPasswordRequest:
    properties:
      password:
        type: string
      passwordConfirmation:
        type: string
      token:
        type: string
    type: object
  github_com_gabrielmrtt_taski_internal_user_infra_http_requests.RegisterUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phoneNumber:
        type: string
    type: object
  github_com_gabrielmrtt_taski_internal_user_infra_http_requests.UpdateUserCredentialsRequest:
    properties:
      email:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
    type: object
  github_com_gabrielmrtt_taski_internal_user_infra_http_requests.UpdateUserDataRequest:
    properties:
      about:
        type: string
      displayName:
        type: string
      profilePicture:
        $ref: '#/definitions/multipart.FileHeader'
    type: object
  github_com_gabrielmrtt_taski_internal_user_infra_http_requests.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  github_com_gabrielmrtt_taski_internal_user_infra_http_requests.VerifyUserRegistrationRequest:
    properties:
      token:
        type: string
    type: object
  github_com_gabrielmrtt_taski_internal_workspace.WorkspaceDto:
    properties:
      color:
        type: string
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      organizationId:
        type: string
      status:
        type: string
      updatedAt:
        type: string
      userCreatorId:
        type: string
      userEditorId:
        type: string
    type: object
  github_com_gabrielmrtt_taski_internal_workspace_infra_http_requests.CreateWorkspaceRequest:
    properties:
      color:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  github_com_gabrielmrtt_taski_internal_workspace_infra_http_requests.UpdateWorkspaceRequest:
    properties:
      color:
        type: string
      description:
        type: string
      name:
        type: string
      status:
        type: string
    type: object
  internal_organization_infra_http.AcceptOrganizationUserInvitationResponse:
    properties:
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_organization_infra_http.CreateOrganizationResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_organization.OrganizationDto'
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_organization_infra_http.DeleteOrganizationResponse:
    properties:
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_organization_infra_http.GetOrganizationResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_organization.OrganizationDto'
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_organization_infra_http.GetOrganizationUserResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_organization.OrganizationUserDto'
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_organization_infra_http.InviteUserToOrganizationResponse:
    properties:
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_organization_infra_http.ListMyOrganizationInvitesResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_organization.OrganizationDto'
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_organization_infra_http.ListOrganizationUsersResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_organization.OrganizationUserDto'
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_organization_infra_http.ListOrganizationsResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_organization.OrganizationDto'
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_organization_infra_http.RefuseOrganizationUserInvitationResponse:
    properties:
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_organization_infra_http.RemoveUserFromOrganizationResponse:
    properties:
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_organization_infra_http.UpdateOrganizationResponse:
    properties:
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_organization_infra_http.UpdateOrganizationUserResponse:
    properties:
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_project_infra_http.CreateProjectResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_project.ProjectDto'
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_project_infra_http.DeleteProjectResponse:
    properties:
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_project_infra_http.GetProjectResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_project.ProjectDto'
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_project_infra_http.ListProjectsResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_project.ProjectDto'
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_project_infra_http.UpdateProjectResponse:
    properties:
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_role_infra_http.CreateRoleResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_role.RoleDto'
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_role_infra_http.DeleteRoleResponse:
    properties:
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_role_infra_http.ListRolesResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_role.RoleDto'
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_role_infra_http.UpdateRoleResponse:
    properties:
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_team_infra_http.CreateTeamResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_team.TeamDto'
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_team_infra_http.DeleteTeamResponse:
    properties:
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_team_infra_http.GetTeamResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_team.TeamDto'
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_team_infra_http.ListTeamsResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core.PaginationOutput-github_com_gabrielmrtt_taski_internal_team_TeamDto'
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_team_infra_http.UpdateTeamResponse:
    properties:
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_user_infra_http.ChangeUserPasswordResponse:
    properties:
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_user_infra_http.DeleteUserResponse:
    properties:
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_user_infra_http.ForgotUserPasswordResponse:
    properties:
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_user_infra_http.GetMeResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_user.UserDto'
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_user_infra_http.LoginResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_user.UserLoginDto'
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_user_infra_http.RecoverUserPasswordResponse:
    properties:
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_user_infra_http.RegisterUserResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_user.UserDto'
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_user_infra_http.UpdateUserCredentialsResponse:
    properties:
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_user_infra_http.UpdateUserDataResponse:
    properties:
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_user_infra_http.VerifyUserRegistrationResponse:
    properties:
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_workspace_infra_http.CreateWorkspaceResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_workspace.WorkspaceDto'
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_workspace_infra_http.DeleteWorkspaceResponse:
    properties:
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_workspace_infra_http.GetWorkspaceResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_workspace.WorkspaceDto'
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_workspace_infra_http.ListWorkspacesResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_workspace.WorkspaceDto'
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  internal_workspace_infra_http.UpdateWorkspaceResponse:
    properties:
      message:
        type: string
      resource:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  multipart.FileHeader:
    properties:
      filename:
        type: string
      header:
        $ref: '#/definitions/textproto.MIMEHeader'
      size:
        format: int64
        type: integer
    type: object
  textproto.MIMEHeader:
    additionalProperties:
      items:
        type: string
      type: array
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates an user
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_user_infra_http_requests.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_user_infra_http.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Login
      tags:
      - Auth
  /file/:file_id:
    get:
      consumes:
      - application/json
      description: Returns the file contents.
      parameters:
      - description: File ID
        in: path
        name: file_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              format: int32
              type: integer
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Get file content
      tags:
      - File
  /me:
    delete:
      consumes:
      - application/json
      description: Deletes the authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_user_infra_http.DeleteUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Delete user
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Returns the authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_user_infra_http.GetMeResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Get me
      tags:
      - User
  /me/credentials:
    put:
      consumes:
      - application/json
      description: Update the authenticated user credentials.
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_user_infra_http_requests.UpdateUserCredentialsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_user_infra_http.UpdateUserCredentialsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Update user credentials
      tags:
      - User
  /me/data:
    put:
      consumes:
      - multipart/form-data
      description: Update the authenticated user data.
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_user_infra_http_requests.UpdateUserDataRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_user_infra_http.UpdateUserDataResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Update user data
      tags:
      - User
  /me/password:
    patch:
      consumes:
      - application/json
      description: Change the authenticated user password.
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_user_infra_http_requests.ChangeUserPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_user_infra_http.ChangeUserPasswordResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Change user password
      tags:
      - User
  /organization:
    get:
      consumes:
      - application/json
      description: List accessible organizations by the authenticated user (created
        by them or organizations they are part of).
      parameters:
      - in: query
        name: name
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: perPage
        type: integer
      - in: query
        name: relations
        type: string
      - in: query
        name: sortBy
        type: string
      - in: query
        name: sortDirection
        type: string
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_organization_infra_http.ListOrganizationsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: List organizations
      tags:
      - Organization
    post:
      consumes:
      - application/json
      description: Creates a new organization.
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_organization_infra_http_requests.CreateOrganizationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_organization_infra_http.CreateOrganizationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Create an organization
      tags:
      - Organization
  /organization-invites:
    get:
      consumes:
      - application/json
      description: Returns organizations the authenticated user has been invited to.
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: perPage
        type: integer
      - in: query
        name: relations
        type: string
      - in: query
        name: sortBy
        type: string
      - in: query
        name: sortDirection
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_organization_infra_http.ListMyOrganizationInvitesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: List my organization invites
      tags:
      - Organization Invites
  /organization-invites/:organizationId/user/:userId/accept-invitation:
    patch:
      consumes:
      - application/json
      description: Accept organization user invitation
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        type: string
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_organization_infra_http.AcceptOrganizationUserInvitationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Accept organization user invitation
      tags:
      - Organization Invites
  /organization-invites/:organizationId/user/:userId/refuse-invitation:
    patch:
      consumes:
      - application/json
      description: Refuse organization user invitation
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        type: string
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_organization_infra_http.RefuseOrganizationUserInvitationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Refuse organization user invitation
      tags:
      - Organization Invites
  /organization/:organizationId:
    delete:
      consumes:
      - application/json
      description: Deletes an existing and accessible organization by the authenticated
        user and the organization ID.
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_organization_infra_http.DeleteOrganizationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Delete an organization
      tags:
      - Organization
    get:
      consumes:
      - application/json
      description: Returns an accessible organization by the authenticated user and
        the organization ID.
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_organization_infra_http.GetOrganizationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Get an organization
      tags:
      - Organization
    put:
      consumes:
      - application/json
      description: Updates an existing and accessible organization by the authenticated
        user and the organization ID.
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_organization_infra_http_requests.UpdateOrganizationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_organization_infra_http.UpdateOrganizationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Update an organization
      tags:
      - Organization
  /organization/:organizationId/role:
    get:
      consumes:
      - application/json
      description: Lists all existing roles in an organization.
      parameters:
      - in: query
        name: description
        type: string
      - in: query
        name: name
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: perPage
        type: integer
      - in: query
        name: relations
        type: string
      - in: query
        name: sortBy
        type: string
      - in: query
        name: sortDirection
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_role_infra_http.ListRolesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: List roles in an organization
      tags:
      - Role
    post:
      consumes:
      - application/json
      description: Creates a new role in an organization.
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_role_infra_http_requests.CreateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_role_infra_http.CreateRoleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Create a role in an organization
      tags:
      - Role
  /organization/:organizationId/role/:roleId:
    delete:
      consumes:
      - application/json
      description: Deletes an existing role in an organization.
      parameters:
      - description: Role ID
        in: path
        name: roleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_role_infra_http.DeleteRoleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Delete a role in an organization
      tags:
      - Role
    put:
      consumes:
      - application/json
      description: Updates an existing role in an organization.
      parameters:
      - description: Role ID
        in: path
        name: roleId
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_role_infra_http_requests.UpdateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_role_infra_http.UpdateRoleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Update a role in an organization
      tags:
      - Role
  /organization/:organizationId/team:
    get:
      consumes:
      - application/json
      description: Lists all existing teams in an organization.
      parameters:
      - in: query
        name: name
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: perPage
        type: integer
      - in: query
        name: relations
        type: string
      - in: query
        name: sortBy
        type: string
      - in: query
        name: sortDirection
        type: string
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_team_infra_http.ListTeamsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: List teams in an organization
      tags:
      - Team
    post:
      consumes:
      - application/json
      description: Creates a new team in an organization.
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_team_infra_http_requests.CreateTeamRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_team_infra_http.CreateTeamResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Create a team in an organization
      tags:
      - Team
  /organization/:organizationId/team/:teamId:
    delete:
      consumes:
      - application/json
      description: Deletes an existing team in an organization.
      parameters:
      - description: Team ID
        in: path
        name: teamId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_team_infra_http.DeleteTeamResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Delete a team in an organization
      tags:
      - Team
    get:
      consumes:
      - application/json
      description: Returns a team in an organization by its ID.
      parameters:
      - description: Team ID
        in: path
        name: teamId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_team_infra_http.GetTeamResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Get a team in an organization
      tags:
      - Team
    put:
      consumes:
      - application/json
      description: Updates an existing team in an organization.
      parameters:
      - description: Team ID
        in: path
        name: teamId
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_team_infra_http_requests.UpdateTeamRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_team_infra_http.UpdateTeamResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Update a team in an organization
      tags:
      - Team
  /organization/:organizationId/user:
    get:
      consumes:
      - application/json
      description: Lists all users in an organization.
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        type: string
      - in: query
        name: displayName
        type: string
      - in: query
        name: email
        type: string
      - in: query
        name: name
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: perPage
        type: integer
      - in: query
        name: relations
        type: string
      - in: query
        name: roleId
        type: string
      - in: query
        name: sortBy
        type: string
      - in: query
        name: sortDirection
        type: string
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_organization_infra_http.ListOrganizationUsersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: List organization users
      tags:
      - Organization User
    post:
      consumes:
      - application/json
      description: Invites a user to an organization.
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_organization_infra_http_requests.InviteUserToOrganizationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_organization_infra_http.InviteUserToOrganizationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Invite user to organization
      tags:
      - Organization User
  /organization/:organizationId/user/:userId:
    delete:
      consumes:
      - application/json
      description: Removes a user from an organization.
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        type: string
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_organization_infra_http.RemoveUserFromOrganizationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Remove user from organization
      tags:
      - Organization User
    get:
      consumes:
      - application/json
      description: Returns an organization user.
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        type: string
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_organization_infra_http.GetOrganizationUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Get organization user
      tags:
      - Organization User
    put:
      consumes:
      - application/json
      description: Updates an organization user.
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        type: string
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_organization_infra_http.UpdateOrganizationUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Update organization user
      tags:
      - Organization User
  /organization/:organizationId/workspace:
    get:
      consumes:
      - application/json
      description: Returns all workspaces in an organization based in the authenticated
        user accesses.
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        type: string
      - in: query
        name: description
        type: string
      - in: query
        name: name
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: perPage
        type: integer
      - in: query
        name: sortBy
        type: string
      - in: query
        name: sortDirection
        type: string
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_workspace_infra_http.ListWorkspacesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: List workspaces in an organization
      tags:
      - Workspace
    post:
      consumes:
      - application/json
      description: Creates a new workspace in an organization.
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_workspace_infra_http_requests.CreateWorkspaceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_workspace_infra_http.CreateWorkspaceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Create a workspace in an organization
      tags:
      - Workspace
  /organization/:organizationId/workspace/:workspaceId:
    delete:
      consumes:
      - application/json
      description: Deletes an existing workspace in an organization.
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        type: string
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_workspace_infra_http.DeleteWorkspaceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Delete a workspace in an organization
      tags:
      - Workspace
    get:
      consumes:
      - application/json
      description: Returns a workspace in an organization based in the authenticated
        user accesses.
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        type: string
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_workspace_infra_http.GetWorkspaceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Get a workspace in an organization
      tags:
      - Workspace
    put:
      consumes:
      - application/json
      description: Updates an existing workspace in an organization.
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        type: string
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_workspace_infra_http_requests.UpdateWorkspaceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_workspace_infra_http.UpdateWorkspaceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Update a workspace in an organization
      tags:
      - Workspace
  /user-registration:
    post:
      consumes:
      - application/json
      description: Register a new user and creates a new user registration token.
        To activate the user, you need to verify the user registration using their
        user registration token.
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_user_infra_http_requests.RegisterUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_user_infra_http.RegisterUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Register a new user
      tags:
      - User Registration
  /user-registration/forgot-password:
    post:
      consumes:
      - application/json
      description: Creates a new password recovery token.
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_user_infra_http_requests.ForgotUserPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_user_infra_http.ForgotUserPasswordResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Forgot user password
      tags:
      - User Registration
  /user-registration/recover-password:
    post:
      consumes:
      - application/json
      description: Recovers an user password using a password recovery token.
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_user_infra_http_requests.RecoverUserPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_user_infra_http.RecoverUserPasswordResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Recover user password
      tags:
      - User Registration
  /user-registration/verify:
    post:
      consumes:
      - application/json
      description: Verifies an user registration using an user registration token.
        After verifying, the user will be activated and ready to use other services.
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_user_infra_http_requests.VerifyUserRegistrationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_user_infra_http.VerifyUserRegistrationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Verify user registration
      tags:
      - User Registration
  /workspace/:workspaceId/project:
    get:
      consumes:
      - application/json
      description: Returns all projects in a workspace accessible by the authenticated
        user.
      parameters:
      - in: query
        name: name
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: perPage
        type: integer
      - in: query
        name: priorityLevel
        type: integer
      - in: query
        name: sortBy
        type: string
      - in: query
        name: sortDirection
        type: string
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_project_infra_http.ListProjectsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: List projects in a workspace
      tags:
      - Project
    post:
      consumes:
      - application/json
      description: Creates a new project in a workspace.
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_project_infra_http_requests.CreateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_project_infra_http.CreateProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Create a project in a workspace
      tags:
      - Project
  /workspace/:workspaceId/project/:projectId:
    delete:
      consumes:
      - application/json
      description: Deletes an accessible project in a workspace.
      parameters:
      - description: Project ID
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_project_infra_http.DeleteProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Delete a project in a workspace
      tags:
      - Project
    get:
      consumes:
      - application/json
      description: Returns an accessible project in a workspace by its ID.
      parameters:
      - description: Project ID
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_project_infra_http.GetProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Get a project in a workspace
      tags:
      - Project
    put:
      consumes:
      - application/json
      description: Updates an accessible project in a workspace.
      parameters:
      - description: Project ID
        in: path
        name: projectId
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_project_infra_http_requests.UpdateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_project_infra_http.UpdateProjectResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_gabrielmrtt_taski_internal_core_http.HttpErrorResponse'
      summary: Update a project in a workspace
      tags:
      - Project
swagger: "2.0"
